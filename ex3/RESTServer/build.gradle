plugins {
    id 'java'
    id 'application'
}

application {
    mainClass = 'mci.rest.ComputationServer'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jboss.resteasy:resteasy-servlet-initializer:3.15.6.Final'
    implementation 'org.jboss.resteasy:resteasy-client:3.15.6.Final'
    implementation 'org.jboss.resteasy:resteasy-jackson2-provider:3.15.6.Final'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'org.eclipse.jetty:jetty-servlet:10.0.13'
    implementation 'org.apache.logging.log4j:log4j-api:2.22.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.22.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
}

group = 'mci.rest.fatjar'
version = '1.0-SNAPSHOT'
description = 'fatjar'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'mci.rest.ComputationServer'
}

jar {
    duplicatesStrategy(DuplicatesStrategy.WARN)
    manifest {
        attributes(
                'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
                'Main-Class': 'mci.rest.ComputationServer'
        )
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

//Creates a Assignment.zip under build/distributions
task mciSrcZip(type: Zip) {
    from projectDir
    include 'src/**/*'
    include '*.gradle'
    include 'gradlew'
    include 'gradlew.bat'
    include 'gradle/**/*'
    archiveFileName = "Assignment.zip"
}

tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
    }
}

